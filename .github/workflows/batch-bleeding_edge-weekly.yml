name: batch-bleeding_edge-weekly

on:
  workflow_dispatch:
  push:
    branches:
      - master
  schedule:
    - cron: '1 1 * * 4'

jobs:
  setup-msys2:
    runs-on: windows-2022

    steps:
      - name: Install MSYS2 & toolchain
        uses: msys2/setup-msys2@v2
        with:
          msystem: UCRT64
          update: true
          cache: true
          install: |
            base-devel
            mingw-w64-ucrt-x86_64-toolchain
            mingw-w64-ucrt-x86_64-cmake
            mingw-w64-ucrt-x86_64-pkg-config

  build-libs:
    name: Build all libraries
    needs: setup-msys2
    runs-on: windows-2022
    strategy:
      matrix:
        pkg:
          # name, path under mpv-win64/mpv-win64/, GitHub release tag, upload glob
          - { name: ffnvcodec,    path: ffnvcodec-dev,    tag: dev,    glob: 'ffnvcodec-dev/*.zst' }
          - { name: freetype2,    path: freetype2-dev,    tag: dev,    glob: 'freetype2-dev/*.zst' }
          - { name: fribidi,      path: fribidi-dev,      tag: dev,    glob: 'fribidi-dev/*.zst' }
          - { name: harfbuzz,     path: harfbuzz-dev,     tag: dev,    glob: 'harfbuzz-dev/*.zst' }
          - { name: lame,         path: lame-dev,         tag: dev,    glob: 'lame-dev/*.zst' }
          - { name: lcms2,        path: lcms2-dev,        tag: dev,    glob: 'lcms2-dev/*.zst' }
          - { name: libass,       path: libass-dev,       tag: dev,    glob: 'libass-dev/*.zst' }
          - { name: libbluray,    path: libbluray-dev,    tag: dev,    glob: 'libbluray-dev/*.zst' }
          - { name: libdovi,      path: libdovi-dev,      tag: dev,    glob: 'libdovi-dev/*.zst' }
          - { name: libdvdcss,    path: libdvdcss-dev,    tag: dev,    glob: 'libdvdcss-dev/*.zst' }
          - { name: libdvdnav,    path: libdvdnav-dev,    tag: dev,    glob: 'libdvdnav-dev/*.zst' }
          - { name: libdvdread,   path: libdvdread-dev,   tag: dev,    glob: 'libdvdread-dev/*.zst' }
          - { name: libogg,       path: libogg-dev,       tag: dev,    glob: 'libogg-dev/*.zst' }
          - { name: libplacebo,   path: libplacebo-dev,   tag: dev,    glob: 'libplacebo-dev/*.zst' }
          - { name: libvorbis,    path: libvorbis_aotuv-dev, tag: dev,  glob: 'libvorbis_aotuv-dev/*.zst' }
          - { name: luajit,       path: luajit,           tag: latest, glob: 'luajit/*pkg*.xz' }
          - { name: opus,         path: opus-dev,         tag: dev,    glob: 'opus-dev/*.zst' }
          - { name: python-embed, path: python-embed,     tag: latest, glob: 'python-embed/*pkg*.xz' }
          - { name: shaderc,      path: shaderc-dev,      tag: dev,    glob: 'shaderc-dev/*.zst' }
          - { name: spirv-cross,  path: spirv-cross-dev,  tag: dev,    glob: 'spirv-cross-dev/*.zst' }
          - { name: vapoursynth,  path: vapoursynth,      tag: latest, glob: 'vapoursynth/*pkg*.xz' }
          - { name: vulkan,       path: vulkan-dev,       tag: dev,    glob: 'vulkan-dev/*.zst' }

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Build ${{ matrix.pkg.name }}
        env:
          PKG_CONFIG_PATH: /opt/lib/pkgconfig
          MSYSTEM: UCRT64
        run: |
          bash -lc "cd /d/a/mpv-win64/mpv-win64/${{ matrix.pkg.path }} \
            && makepkg -s --noconfirm -p ${PWD}/PKGBUILD"

      - name: Delete old assets
        if: always()
        uses: mknejp/delete-release-assets@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ matrix.pkg.tag }}
          assets: ${{ matrix.pkg.name }}*
          fail-if-no-assets: false
          fail-if-no-release: false

      - name: Upload ${{ matrix.pkg.name }}
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ${{ matrix.pkg.glob }}
          tag: ${{ matrix.pkg.tag }}
          overwrite: true
          file_glob: true

  ffmpeg:
    needs: [ setup-msys2, build-libs ]
    runs-on: windows-2022
    steps:
      - uses: actions/checkout@v4

      - name: Build ffmpeg
        env:
          C_INCLUDE_PATH: /opt/include
          CPLUS_INCLUDE_PATH: /opt/include
          LIBRARY_PATH: /opt/lib
          MSYSTEM: UCRT64
        run: |
          bash -lc 'pacman -Sy --noconfirm nasm git'
          for pkg in \
            lame-dev-3.100-1-x86_64.pkg.tar.zst \
            libogg-dev-1.3.5-1-x86_64.pkg.tar.zst \
            libvorbis_aotuv-dev-1.3.7-1-x86_64.pkg.tar.zst \
            opus-dev-1.5.2-1-x86_64.pkg.tar.zst \
            ffnvcodec-dev-13.0.19.0-1-x86_64.pkg.tar.zst \
            vapoursynth-dev-72-1-x86_64.pkg.tar.zst \
            vulkan-dev-1.4.309.0-1-x86_64.pkg.tar.zst; do
            curl -fsSL -O https://github.com/${{ github.repository }}/releases/download/dev/$pkg
          done
          bash -lc 'pacman -U --noconfirm *.zst'
          bash -lc 'cd /d/a/mpv-win64/mpv-win64/ffmpeg && makepkg -s --noconfirm -p PKGBUILD-git'

      - name: Upload ffmpeg packages
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ffmpeg/*pkg*.xz
          tag: bleeding_edge
          overwrite: true
          file_glob: true

      - uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ffmpeg/*.zst
          tag: bleeding_edge
          overwrite: true
          file_glob: true

  package:
    needs: [ ffmpeg, build-libs ]
    runs-on: windows-2022
    steps:
      - name: Bundle all binaries
        run: |
          $date = Get-Date -Format "yyyyMMdd"
          for pkg in \
            ffmpeg-git-7.2pre-1-x86_64.pkg.tar.xz \
            luajit-2.1-1-x86_64.pkg.tar.xz \
            vapoursynth-72-1-x86_64.pkg.tar.xz \
            mpv-git-0.41pre-1-x86_64.pkg.tar.xz \
            mcfgthread-20250623-1-x86_64.pkg.tar.xz; do
            curl -fsSL -O https://github.com/${{ github.repository }}/releases/download/bleeding_edge/$pkg
          done
          bash -lc 'pacman -U --noconfirm *.xz'
          md C:\msys64\opt\bin\portable_config
          del *.xz
          7z a "All-in-One-MPV-git-withoutPython-$date.7z" C:\msys64\opt\bin\*
          copy /Y "All-in-One-MPV-git-withoutPython-$date.7z" "All-in-One-MPV-git-withoutPython-latest.7z"
          for pkg in \
            python-embed-3.13.5-1-x86_64.pkg.tar.xz \
            vapoursynth-plugin-core-extra-72-1-x86_64.pkg.tar.xz; do
            curl -fsSL -O https://github.com/${{ github.repository }}/releases/download/latest/$pkg
          done
          bash -lc 'pacman -U --noconfirm *.xz'
          7z a "All-in-One-MPV-git-$date.7z" C:\msys64\opt\bin\*
          copy /Y "All-in-One-MPV-git-$date.7z" "All-in-One-MPV-git-latest.7z"

      - name: Upload bundles
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: All*.7z
          tag: bleeding_edge
          overwrite: true
          file_glob: true
